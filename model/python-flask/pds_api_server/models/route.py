# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from pds_api_server.models.base_model_ import Model
from pds_api_server import util


class Route(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, resource: str=None, query: str=None, url: str=None):  # noqa: E501
        """Route - a model defined in Swagger

        :param resource: The resource of this Route.  # noqa: E501
        :type resource: str
        :param query: The query of this Route.  # noqa: E501
        :type query: str
        :param url: The url of this Route.  # noqa: E501
        :type url: str
        """
        self.swagger_types = {
            'resource': str,
            'query': str,
            'url': str
        }

        self.attribute_map = {
            'resource': 'resource',
            'query': 'query',
            'url': 'url'
        }
        self._resource = resource
        self._query = query
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'Route':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The route of this Route.  # noqa: E501
        :rtype: Route
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource(self) -> str:
        """Gets the resource of this Route.


        :return: The resource of this Route.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource: str):
        """Sets the resource of this Route.


        :param resource: The resource of this Route.
        :type resource: str
        """
        if resource is None:
            raise ValueError("Invalid value for `resource`, must not be `None`")  # noqa: E501

        self._resource = resource

    @property
    def query(self) -> str:
        """Gets the query of this Route.


        :return: The query of this Route.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query: str):
        """Sets the query of this Route.


        :param query: The query of this Route.
        :type query: str
        """
        if query is None:
            raise ValueError("Invalid value for `query`, must not be `None`")  # noqa: E501

        self._query = query

    @property
    def url(self) -> str:
        """Gets the url of this Route.


        :return: The url of this Route.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Route.


        :param url: The url of this Route.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")  # noqa: E501

        self._url = url
